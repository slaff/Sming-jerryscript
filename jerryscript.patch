diff --git a/CMakeLists.txt b/CMakeLists.txt
index 43ac22ea..1481223b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -47,6 +47,7 @@ if(NOT CMAKE_BUILD_TYPE)
 endif()
 
 # Optional components
+set(EMSCRIPTEN_SNAPSHOT_COMPILER OFF CACHE BOOL "Build snapshot-compiler.js using Emscripten?")
 set(JERRY_CMDLINE           ON  CACHE BOOL "Build jerry command line tool?")
 set(JERRY_CMDLINE_TEST      OFF CACHE BOOL "Build jerry test command line tool?")
 set(JERRY_CMDLINE_SNAPSHOT  OFF CACHE BOOL "Build jerry snapshot command line tool?")
@@ -99,6 +100,14 @@ if("${PLATFORM}" STREQUAL "ESP-IDF")
   set(ENABLE_STRIP_MESSAGE       " (FORCED BY PLATFORM)")
 endif()
 
+if(EMSCRIPTEN_SNAPSHOT_COMPILER)
+  set(JERRY_LIBC         OFF)
+  set(JERRY_LIBM         OFF)
+
+  set(JERRY_LIBC_MESSAGE         " (FORCED BY EMSCRIPTEN)")
+  set(JERRY_LIBM_MESSAGE         " (FORCED BY EMSCRIPTEN)")
+endif()
+
 if(USING_TI)
   set(ENABLE_STRIP       OFF)
 
@@ -125,6 +134,7 @@ message(STATUS "CMAKE_BUILD_TYPE               " ${CMAKE_BUILD_TYPE})
 message(STATUS "CMAKE_C_COMPILER_ID            " ${CMAKE_C_COMPILER_ID})
 message(STATUS "CMAKE_SYSTEM_NAME              " ${CMAKE_SYSTEM_NAME})
 message(STATUS "CMAKE_SYSTEM_PROCESSOR         " ${CMAKE_SYSTEM_PROCESSOR})
+message(STATUS "EMSCRIPTEN_SNAPSHOT_COMPILER   " ${EMSCRIPTEN_SNAPSHOT_COMPILER})
 message(STATUS "BUILD_SHARED_LIBS              " ${BUILD_SHARED_LIBS})
 message(STATUS "ENABLE_AMALGAM                 " ${ENABLE_AMALGAM} ${ENABLE_AMALGAM_MESSAGE})
 message(STATUS "ENABLE_LTO                     " ${ENABLE_LTO} ${ENABLE_LTO_MESSAGE})
@@ -197,13 +207,15 @@ if(ENABLE_LTO)
 endif()
 
 # Compiler / Linker flags
-if("${PLATFORM}" STREQUAL "DARWIN")
-  jerry_add_link_flags(-lSystem)
-  set(CMAKE_C_ARCHIVE_CREATE "<CMAKE_AR> Sqc <TARGET> <LINK_FLAGS> <OBJECTS>")
-  set(CMAKE_C_ARCHIVE_FINISH "<CMAKE_RANLIB> -no_warning_for_no_symbols -c <TARGET>")
-  set(CMAKE_SHARED_LINKER_FLAGS  "-undefined dynamic_lookup")
-elseif((NOT CYGWIN AND NOT MINGW AND NOT MSYS) AND (USING_GCC OR USING_CLANG))
-  jerry_add_link_flags(-Wl,-z,noexecstack)
+if(NOT EMSCRIPTEN_SNAPSHOT_COMPILER)
+  if("${PLATFORM}" STREQUAL "DARWIN")
+    jerry_add_link_flags(-lSystem)
+    set(CMAKE_C_ARCHIVE_CREATE "<CMAKE_AR> Sqc <TARGET> <LINK_FLAGS> <OBJECTS>")
+    set(CMAKE_C_ARCHIVE_FINISH "<CMAKE_RANLIB> -no_warning_for_no_symbols -c <TARGET>")
+    set(CMAKE_SHARED_LINKER_FLAGS  "-undefined dynamic_lookup")
+  elseif((NOT CYGWIN AND NOT MINGW AND NOT MSYS) AND (USING_GCC OR USING_CLANG))
+    jerry_add_link_flags(-Wl,-z,noexecstack)
+  endif()
 endif()
 
 if(USING_GCC OR USING_CLANG)
@@ -242,7 +254,7 @@ if(JERRY_LIBFUZZER)
 endif()
 
 # Strip binary
-if(ENABLE_STRIP AND NOT CMAKE_BUILD_TYPE STREQUAL "Debug")
+if(ENABLE_STRIP AND NOT CMAKE_BUILD_TYPE STREQUAL "Debug" AND NOT EMSCRIPTEN_SNAPSHOT_COMPILER)
   jerry_add_link_flags(-s)
 endif()
 
@@ -296,3 +308,8 @@ endif()
 if(DOCTESTS)
   add_subdirectory(tests/unit-doc)
 endif()
+
+# JerryScript snapshot-compiler.js
+if(EMSCRIPTEN_SNAPSHOT_COMPILER)
+  add_subdirectory(emscripten-snapshot-compiler)
+endif()
diff --git a/jerry-core/CMakeLists.txt b/jerry-core/CMakeLists.txt
index 46a2b89a..7a4e36cd 100644
--- a/jerry-core/CMakeLists.txt
+++ b/jerry-core/CMakeLists.txt
@@ -42,6 +42,15 @@ set(JERRY_GC_LIMIT                  "(0)"        CACHE STRING "Heap usage limit
 set(JERRY_STACK_LIMIT               "(0)"        CACHE STRING "Maximum stack usage size, in kilobytes")
 set(JERRY_GC_MARK_LIMIT             "(8)"        CACHE STRING "Maximum depth of recursion during GC mark phase")
 
+if(EMSCRIPTEN_SNAPSHOT_COMPILER)
+  set(JERRY_SNAPSHOT_SAVE ON)
+  set(JERRY_ERROR_MESSAGES ON)
+
+  set(FEATURE_SNAPSHOT_SAVE_MESSAGE  " (FORCED BY ENABLED EMSCRIPTEN_SNAPSHOT_COMPILER)")
+  set(FEATURE_ERROR_MESSAGES_MESSAGE " (FORCED BY ENABLED EMSCRIPTEN_SNAPSHOT_COMPILER)")
+endif()
+
+
 # Option overrides
 if(JERRY_SYSTEM_ALLOCATOR)
   set(JERRY_CPOINTER_32_BIT ON)
@@ -78,7 +87,7 @@ endif()
 # Status messages
 message(STATUS "JERRY_CPOINTER_32_BIT          " ${JERRY_CPOINTER_32_BIT} ${JERRY_CPOINTER_32_BIT_MESSAGE})
 message(STATUS "JERRY_DEBUGGER                 " ${JERRY_DEBUGGER})
-message(STATUS "JERRY_ERROR_MESSAGES           " ${JERRY_ERROR_MESSAGES})
+message(STATUS "JERRY_ERROR_MESSAGES           " ${JERRY_ERROR_MESSAGES}  ${FEATURE_ERROR_MESSAGES_MESSAGE})
 message(STATUS "JERRY_EXTERNAL_CONTEXT         " ${JERRY_EXTERNAL_CONTEXT})
 message(STATUS "JERRY_PARSER                   " ${JERRY_PARSER})
 message(STATUS "JERRY_LINE_INFO                " ${JERRY_LINE_INFO})
diff --git a/tools/build.py b/tools/build.py
index 9b140c76..15466ec1 100755
--- a/tools/build.py
+++ b/tools/build.py
@@ -35,6 +35,27 @@ def default_toolchain():
                              'toolchain_%s_%s.cmake' % (sysname.lower(), machine.lower()))
     return toolchain if os.path.isfile(toolchain) else None
 
+
+def get_toolchain_from_arguments(arguments):
+    if arguments.emscripten_snapshot_compiler == 'ON':
+        if arguments.toolchain:
+            print('Cannot use --toolchain when using --emscripten-snapshot-compiler', file=sys.stderr)
+            sys.exit(-1)
+        if 'EMSCRIPTEN' not in os.environ:
+            print('No EMSCRIPTEN environment variable set.\n'
+              'Install the Emscripten SDK from https://emscripten.org and\n'
+              'make sure to `source emsdk_env.sh` before building!', file=sys.stderr)
+            sys.exit(-1)
+        emx_root = os.environ['EMSCRIPTEN']
+        emx_toolchain = '%s/cmake/Modules/Platform/Emscripten.cmake' % emx_root
+        if not os.path.isfile(emx_toolchain):
+            print('Missing toolchain file at %s' % emx_toolchain, file=sys.stderr)
+            sys.exit(-1)
+        return emx_toolchain
+    else:
+        return arguments.toolchain
+
+
 def get_arguments():
     devhelp_preparser = argparse.ArgumentParser(add_help=False)
     devhelp_preparser.add_argument('--devhelp', action='store_true', default=False,
@@ -86,6 +107,9 @@ def get_arguments():
                           help='strip release binaries (%(choices)s)')
     buildgrp.add_argument('--toolchain', metavar='FILE', default=default_toolchain(),
                           help='specify toolchain file (default: %(default)s)')
+    parser.add_argument('--emscripten-snapshot-compiler', metavar='X', choices=['ON', 'OFF'], default='OFF',
+                        type=str.upper, help='build JerryScript snapshot-compiler.js'
+                                             ' with Emscripten (%(choices)s; default: %(default)s)')
     buildgrp.add_argument('-v', '--verbose', action='store_const', const='ON',
                           help='increase verbosity')
 
@@ -184,9 +208,17 @@ def generate_build_options(arguments):
     build_options_append('ENABLE_LTO', arguments.lto)
     build_options_append('BUILD_SHARED_LIBS', arguments.shared_libs)
     build_options_append('ENABLE_STRIP', arguments.strip)
-    build_options_append('CMAKE_TOOLCHAIN_FILE', arguments.toolchain)
+
+    toolchain = get_toolchain_from_arguments(arguments)
+    if toolchain:
+        print("Using toolchain: %s" % toolchain)
+        build_options_append('CMAKE_TOOLCHAIN_FILE', toolchain)
+
     build_options_append('CMAKE_VERBOSE_MAKEFILE', arguments.verbose)
 
+    # emscripten build option
+    build_options_append('EMSCRIPTEN_SNAPSHOT_COMPILER', arguments.emscripten_snapshot_compiler)
+
     # optional components
     build_options_append('DOCTESTS', arguments.doctests)
     build_options_append('JERRY_CMDLINE', arguments.jerry_cmdline)
diff --git a/.gitignore b/.gitignore
index 3bb753c2..157b19c7 100644
--- a/.gitignore
+++ b/.gitignore
@@ -39,3 +39,11 @@ docs/doxygen
 # Tests
 tests/test262/
 .vs
+
+# Emscripten
+emscripten-snapshot-compiler/node_modules
+jsconfig.json
+
+# Sming
+out/
+/.submodule
